# Расчетная работа. Теория графов
## Цель:
- Ознакомиться с теорией графов и понять что это такое.
- Выяснить, для чего это нужно.
- Выяснить, какие виды графов бывают.
- Научиться понимать и решать теоретико-графовые задачи.
### Ключевые понятия
- Графом называется математическая структура, которая используется для моделирования парных отношений между объектами.
- Вершины представляют собой объекты или элементы, которые мы хотим связать.
- Рёбра представляют отношения или связи между этими вершинами.
- Ориентированный граф: Рёбра имеют направление. Например, если есть ребро от A к B, это означает, что A связано с B, но не обязательно наоборот.
- Неориентированный граф: Рёбра не имеют направления. Например, если существует ребро между вершинами A и B, это означает, что A связано с B и B связано с A.
- Граф считается связанным, если существует путь между каждой парой вершин. Если граф не связан, он состоит из нескольких компонент связности.
- Цикл — это путь в графе, который начинается и заканчивается в одной и той же вершине, не проходя по одному и тому же ребру более одного раза.
 ## Задача
  - Реализовать алгоритм на языке программирования C++, решающий теоретико-графовую задачу в соответствии с выданным вариантом.
## Вариант
Мой вариант 5.4 Граф задаётся списком смежности. Мне необходимо было найти компоненты связности графа.

Варианты заданий можно посмотреть в методичке [по ссылке](https://drive.google.com/file/d/1-rSQZex8jW-2DlY2kko18gU1oUAtEGHl/view)

## Алгоритм программы:

### 1.Рекурсивный обход в глубину (DFS):

Параметры для ознакомления:
 * start: текущая вершина
 * adj: матрица смежности графа
 * visited: массив посещенных вершин

Функция рекурсивно обходит все достижимые вершины из текущей;
Помечает посещенные вершины в массиве visited.

![](./DFS.png)

### 2. Считывание количества вершин и рёбер графа из файла:
 
Параметры для ознакомления:
  * n: число вершин
  * m: число рёбер

Программа запрашивает у пользователя имя файла, который должен содержать необходимые данные о графе. Затем открывается файл. Если файл не удаётся открыть, выводится сообщение об ошибке, и программа завершает выполнение. После успешного открытия файла считываются количество верщин и количество рёбер

![](./File.png)

### 3. Запуск DFS для каждой компоненты связности

Если вершина i не была посещена, мы вызываем функцию для выполнения обхода в глубину, начиная с этой вершины.
После завершения обхода для одной компоненты связности выводится перевод строки, чтобы отделить выводы для разных компонент.

![](./FUNC.png)

## Вывод
В ходе выполнения данной расчётной работы я:
- Ознакомился с понятием графов.
- Выяснил, какие виды графов бывают (ориентированные/неориентированные, связные/несвязные).
- Ознакомился с таким способом представления графов в памяти компьютера, как список смежности.

## Использованные источники:

Информация для работы с графами на C++ была взята [тут](https://brestprog.by/topics/);

Дополнительную информацию можно найти [тут](https://habr.com/ru/companies/otus/articles/568026/);

## Литературные источники:

1. Берж К. Теория графов и её применение: монография. — Москва: Издательство иностранной литературы, 1962.

2. Белоусов А.В., Ткачев С.В. Дискретная математика: учебное пособие. — Москва: Издательство МГТУ им. Баумана, 2002.

3. Кормен Т.Х., Лейзерсон Ч.И., Ривест Р.Л., Штайн К. Алгоритмы: построение и анализ (3-е издание): учебное пособие. — Москва: Издательский дом «Вильямс», 2013.

4. Кристофидес Н. Теория графов: алгоритмический подход: монография. — Москва: Мир, 1977.

5. Майника Э. Алгоритмы оптимизации на сетях и графах: монография. — Москва: Мир, 1981.

6. Новиков А.A. Дискретная математика для программистов: учебное пособие. — Санкт-Петербург: Питер, 2001.

7. Уилсон Р. Введение в теорию графов: учебное пособие. — Москва: Мир, 1977.

8. Харари Ф. Теория графов: монография. — Москва: Мир, 1973.

